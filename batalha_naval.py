# -*- coding: utf-8 -*-
"""Batalha_Naval.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lhhtpp-Ay9neVDJ7LJ3JucOQghJaEIZV
"""

import random

# Função para criar um tabuleiro 5x5 usando uma lista bidimensional
def criar_tabuleiro(tamanho=5):
    tabuleiro = []
    for i in range(tamanho):
        linha = ["O"] * tamanho  # Cada linha tem 5 posições
        tabuleiro.append(linha)
    return tabuleiro

# Função para exibir o tabuleiro com numeração de linhas e colunas
def exibir_tabuleiro(tabuleiro):
    tamanho = len(tabuleiro)
    print("  " + " ".join([str(i) for i in range(tamanho)]))  # Cabeçalho com numeração das colunas
    for i, linha in enumerate(tabuleiro):
        print(f"{i} " + " ".join(linha))  # Exibe a numeração das linhas e o conteúdo do tabuleiro

# Função principal do jogo
def jogo_batalha_naval():
    # Passo 1: Preparação
    tamanho_tabuleiro = 5
    tabuleiro = criar_tabuleiro(tamanho_tabuleiro)

    # Posiciona o navio aleatoriamente
    linha_navio = random.randint(0, tamanho_tabuleiro - 1)
    coluna_navio = random.randint(0, tamanho_tabuleiro - 1)

    tentativas = 5  # Número máximo de tentativas

    print("Bem-vindo à Batalha Naval!")
    print("Você tem 5 tentativas para encontrar o navio.")

    while tentativas > 0:
        # Exibe o tabuleiro
        exibir_tabuleiro(tabuleiro)
        print(f"Você tem {tentativas} tentativas restantes.")

        # Solicita a posição ao jogador
        linha_tentativa = int(input("Digite a linha (0 a 4): "))
        coluna_tentativa = int(input("Digite a coluna (0 a 4): "))

        # Verifica se a posição é válida
        if linha_tentativa < 0 or linha_tentativa >= tamanho_tabuleiro or coluna_tentativa < 0 or coluna_tentativa >= tamanho_tabuleiro:
            print("Posição inválida! Tente novamente.")
            continue

        # Passo 3: Verifica se o jogador acertou o navio
        if linha_tentativa == linha_navio and coluna_tentativa == coluna_navio:
            tabuleiro[linha_tentativa][coluna_tentativa] = "X"  # Marca a posição do acerto com "X"
            print("Parabéns! Você acertou o navio!")
            break
        else:
            # Marca o erro no tabuleiro
            if tabuleiro[linha_tentativa][coluna_tentativa] != "X":  # Não sobrescreve um acerto anterior
                tabuleiro[linha_tentativa][coluna_tentativa] = "O"  # Mantém "O" nas tentativas erradas
            print("Errou! O navio não está nessa posição.")
            tentativas -= 1

    # Fim do jogo
    if tentativas == 0:
        print("Fim de jogo! Você esgotou todas as tentativas.")
        print(f"O navio estava na posição ({linha_navio}, {coluna_navio}).")
        tabuleiro[linha_navio][coluna_navio] = "X"  # Marca a posição do navio no tabuleiro para mostrar onde estava
        exibir_tabuleiro(tabuleiro)  # Exibe o tabuleiro final com a posição do navio revelada
    else:
        print("Você venceu!")

# Executa o jogo
jogo_batalha_naval()